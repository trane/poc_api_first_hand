swagger: '2.0'
info:
  version: '1.0.0'
  title: Swagger Petstore (Simple)
  description:
    A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
    This original specification is augmented with play-swagger specific parts to demonstrate usage of
    vendor-specific instructions
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Swagger API team
    email: foo@example.com
    url: http://swagger.io
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: localhost:9000
basePath: /petstore
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
# the x-api-first-error-mapping area is used to define how errors returned by failing methods
# should be mapped to HTTP response codes
# custom defined exceptions must be placed in the same package as a controller
x-api-first-error-mapping:
  404:
    - java.util.NoSuchElementException
    - java.lang.IndexOutOfBoundsException
  406:
    - java.lang.UnsupportedOperationException
    - java.lang.IllegalArgumentException
    - java.lang.IllegalStateException
  409:
    - java.util.ConcurrentModificationException
    - java.util.EmptyStackException
  500:
    - java.sql.SQLException
paths:
  /pets:
    get:
      # the naming convention for the handler method may be overriden using x-api-first-handler
      # instruction applyed on URL or VERB level. All handlers MUST belong to the same package
      # this x-api-first-handler is valid only for "GET /pets"
      "x-api-first-handler": "admin.Dashboard.methodLevel"
      description: Returns all pets from the system that the user has access to
      operationId: findPets
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
          minimum: 1
          maximum: 200
      responses:
        '200':
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      # this x-api-first-handler is valid only for "POST /pets"
      "x-api-first-handler": "admin.Dashboard.postHandler"
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/newPet'
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /pets/{id}:
    # this x-api-first-handler is valid for all verbs of the /pets/{id} URL
    "x-api-first-handler": "admin.Dashboard.pathLevel"
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  newPet:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
  errorModel:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
